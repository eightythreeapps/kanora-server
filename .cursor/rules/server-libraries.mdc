---
description: A list of the server side libraries that should be used in this project and what they are for
globs: server/**/*.tsx
alwaysApply: false
---
# Server libraries

ðŸ”¹ Core Libraries
âœ… Express â€“ express (Minimal, fast web framework)
âœ… TypeScript â€“ typescript, ts-node, @types/node, @types/express

ðŸ”¹ API & Middleware
âœ… CORS (Cross-Origin Resource Sharing) â€“ cors
âœ… Helmet (Security headers) â€“ helmet
âœ… Compression (Gzip compression for performance) â€“ compression
âœ… Morgan (Request logging) â€“ morgan
âœ… Express Rate Limit (Rate limiting for security) â€“ express-rate-limit

ðŸ”¹ Database & ORM
âœ… Prisma ORM â€“ @prisma/client, prisma (Schema-based database access)
âœ… PostgreSQL/MySQL/MongoDB Adapter (depending on your DB)

PostgreSQL: pg
MySQL: mysql2
MongoDB: mongodb
ðŸ”¹ Authentication & Security
âœ… JWT Authentication â€“ jsonwebtoken, bcryptjs (for password hashing)
âœ… Zod (for input validation) â€“ zod
âœ… Dotenv (for environment variables) â€“ dotenv

ðŸ”¹ WebSockets & Real-Time Features
âœ… Socket.io Server â€“ socket.io
âœ… Redis (for WebSocket scaling, caching) â€“ ioredis

ðŸ”¹ Utilities & Helper Libraries
âœ… uuid (for generating unique IDs) â€“ uuid
âœ… date-fns (for date/time operations) â€“ date-fns
âœ… Lodash (utility functions) â€“ lodash

ðŸ”¹ Logging & Debugging
âœ… Winston (for logging) â€“ winston
âœ… Pino (alternative to Winston, faster performance) â€“ pino, pino-pretty

ðŸ”¹ Testing & Development
âœ… Jest (unit testing) â€“ jest, ts-jest, @types/jest
âœ… Supertest (for API testing) â€“ supertest, @types/supertest
âœ… ESLint & Prettier (linting & formatting) â€“ eslint, prettier, eslint-config-prettier